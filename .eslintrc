{
  "env": {
    "es6": true,
    "browser": true,
    "node": true
  },
  "parser": "@typescript-eslint/parser",
  "extends": [
    "airbnb",
    "plugin:@typescript-eslint/recommended",
    "plugin:prettier/recommended"
  ],
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [".js", ".jsx", ".ts", ".tsx"]
      }
    }
  },
  "rules": {
    // import 시 파일 확장자 표기 x 처리
    "import/extensions": [ "off" ],
    // jsx 파일 확장자 규칙 (js, jsx, ts, tsx)
    "react/jsx-filename-extension": [1, { "extensions": [".js", ".jsx", ".ts", ".tsx"] }],
    // suppress errors for missing 'import React' in files
    "react/react-in-jsx-scope": "off",
    // toolkit 에서는 param 에 대입하는 방식으로 되어있어 disable 처리
    "no-param-reassign": "off",
    // 테스트 파일은 devDependency를 봐야 해서 관련 설정 처리
    "import/no-extraneous-dependencies": ["error", {"devDependencies": ["**/*.test.ts", "**/*.test.tsx", "**/*.spec.ts",  "**/*.spec.tsx"]}],
    // jsx 내의 spread 문법을 허용합니다.
    "react/jsx-props-no-spreading": "off",
    // 혹시모를 any타입의 사용을 위해 아에 불가하게는 하지 않습니다.
    "@typescript-eslint/no-explicit-any": "off",
    // 함수의 return 타입은 자동완성되기 때문에 굳이 명시가 필요없을듯 하여 off
    "@typescript-eslint/explicit-module-boundary-types": "off",
    // 컴포넌트 하단에 추가 비즈니스 함수를 작성하는 패턴을 사용할것이기 때문에 off
    "no-use-before-define": "off"
  }
}
